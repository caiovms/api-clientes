version: '3.5'

networks:
  mynetwork:
    name: mynetwork-network
    driver: bridge

volumes:
  volume_postgres:
  volume_pgadmin: 

services:

    service_postgres:
        container_name: cnt-postgressql
        image: postgres:alpine
        ports:
            - '5432:5432'
        restart: always
        volumes:
            - volume_postgres:/var/lib/postgresql/data
            - ./docker/database/init.sh :/docker-entrypoint-initdb.d/init.sh
        networks:
            - mynetwork
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            CONFIGS: "listen_addresses:'*'"

    service_pgadmin:
        container_name: cnt-pgadmin
        image: dpage/pgadmin4
        ports:
            - '16543:80'
        volumes:
            - 'volume_pgadmin:/root/.pgadmin'
        networks:
            - mynetwork
        environment:
            PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL:-admin}'
            PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD:-admin}'
        depends_on:
            - service_postgres
        restart: unless-stopped

    service_api_getway:
        container_name: cnt-api-getway
        image: 'api_getway:latest'
        ports:
            - '5000:80'
        depends_on:
            - service_postgres
            - service_grpc_clientes
            - service_grpc_enderecos
        build:
            context: .
            dockerfile: Dockerfile-api-getway
        environment:
            ASPNETCORE_ENVIRONMENT: "Development"
        networks:
            - mynetwork

    service_grpc_clientes:
        container_name: cnt-grpc-clientes
        image: 'grpc_clientes:latest'
        ports:
            - '5002:80'
        links:
            - service_postgres
        depends_on:
            - service_postgres
        build:
            context: .
            dockerfile: Dockerfile-grpc-clientes
        environment:
            ASPNETCORE_ENVIRONMENT: "Development"
        networks:
            - mynetwork

    service_grpc_enderecos:
        container_name: cnt-grpc-enderecos
        image: 'grpc_enderecos:latest'
        ports:
            - '5003:80'
        links:
            - service_postgres
        depends_on:
            - service_postgres
        build:
            context: .
            dockerfile: Dockerfile-grpc-enderecos
        environment:
            ASPNETCORE_ENVIRONMENT: "Development"
        networks:
            - mynetwork

    # servapi_nginx:
    #     container_name: cnt-nginx
    #     image: 'nginx:alpine'
    #     ports:
    #         - '80:80'
    #     restart: always
    #     networks:
    #         - mynetwork
    #     links:
    #         - service_grpc_clientes:service_grpc_clientes
    #         - service_grpc_enderecos:service_grpc_enderecos
    #     depends_on:
    #         - service_api_getway
    #     volumes:
    #         - './docker/nginx/nginx-grpc-getway.conf:/etc/nginx/conf.d/default.conf'
